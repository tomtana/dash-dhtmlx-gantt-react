{"version":3,"sources":["webpack:///./src/lib/components/Gantt.react.js"],"names":["data","id","text","start_date","duration","progress","links","source","target","type","GanttApp","currentZoom","messages","action","item","message","addMessage","zoom","setState","maxLogLength","newMessate","state","length","props","handleZoomChange","logDataUpdate","Component","defaultProps","propTypes","PropTypes","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,IAAI,GAAG;AACTA,MAAI,EAAE,CACF;AAAEC,MAAE,EAAE,CAAN;AAASC,QAAI,EAAE,SAAf;AAA0BC,cAAU,EAAE,YAAtC;AAAoDC,YAAQ,EAAE,CAA9D;AAAiEC,YAAQ,EAAE;AAA3E,GADE,EAEF;AAAEJ,MAAE,EAAE,CAAN;AAASC,QAAI,EAAE,SAAf;AAA0BC,cAAU,EAAE,YAAtC;AAAoDC,YAAQ,EAAE,CAA9D;AAAiEC,YAAQ,EAAE;AAA3E,GAFE,CADG;AAKTC,OAAK,EAAE,CACH;AAAEL,MAAE,EAAE,CAAN;AAASM,UAAM,EAAE,CAAjB;AAAoBC,UAAM,EAAE,CAA5B;AAA+BC,QAAI,EAAE;AAArC,GADG;AALE,CAAb;;IAUMC,Q;;;;;;;;;;;;;;;;4DACM;AACJC,iBAAW,EAAE,MADT;AAEJC,cAAQ,EAAE;AAFN,K;;oEAmBQ,UAACH,IAAD,EAAOI,MAAP,EAAeC,IAAf,EAAqBb,EAArB,EAA4B;AACxC,UAAIC,IAAI,GAAGY,IAAI,IAAIA,IAAI,CAACZ,IAAb,eAAyBY,IAAI,CAACZ,IAA9B,SAAwC,EAAnD;AACA,UAAIa,OAAO,aAAMN,IAAN,cAAcI,MAAd,eAAyBZ,EAAzB,cAA+BC,IAA/B,CAAX;;AACA,UAAIO,IAAI,KAAK,MAAT,IAAmBI,MAAM,KAAK,QAAlC,EAA4C;AACxCE,eAAO,yBAAkBD,IAAI,CAACP,MAAvB,uBAA0CO,IAAI,CAACN,MAA/C,OAAP;AACH;;AACD,YAAKQ,UAAL,CAAgBD,OAAhB;AACH,K;;uEAEkB,UAACE,IAAD,EAAU;AACzB,YAAKC,QAAL,CAAc;AACVP,mBAAW,EAAEM;AADH,OAAd;AAGH,K;;;;;;;WA3BD,oBAAWF,OAAX,EAAoB;AAChB,UAAMI,YAAY,GAAG,CAArB;AACA,UAAMC,UAAU,GAAG;AAAEL,eAAO,EAAPA;AAAF,OAAnB;AACA,UAAMH,QAAQ,IACVQ,UADU,4BAEP,KAAKC,KAAL,CAAWT,QAFJ,EAAd;;AAKA,UAAIA,QAAQ,CAACU,MAAT,GAAkBH,YAAtB,EAAoC;AAChCP,gBAAQ,CAACU,MAAT,GAAkBH,YAAlB;AACH;;AACD,WAAKD,QAAL,CAAc;AAAEN,gBAAQ,EAARA;AAAF,OAAd;AACH;;;WAiBD,kBAAS;AACL,wBAAkC,KAAKS,KAAvC;AAAA,UAAQV,WAAR,eAAQA,WAAR;AAAA,UAAqBC,QAArB,eAAqBA,QAArB;AACA,UAAOX,EAAP,GAAa,KAAKsB,KAAlB,CAAOtB,EAAP;AACA,0BACI;AAAK,UAAE,EAAEA;AAAT,sBACI;AAAK,iBAAS,EAAC;AAAf,sBACI,2DAAC,iFAAD;AACI,YAAI,EAAEU,WADV;AAEI,oBAAY,EAAE,KAAKa;AAFvB,QADJ,CADJ,eAOI;AAAK,iBAAS,EAAC;AAAf,sBACI,2DAAC,qFAAD;AACI,aAAK,EAAExB,IADX;AAEI,YAAI,EAAEW,WAFV;AAGI,qBAAa,EAAE,KAAKc;AAHxB,QADJ,CAPJ,eAcI,2DAAC,qFAAD;AACI,gBAAQ,EAAEb;AADd,QAdJ,CADJ;AAoBH;;;;EA1DkBc,+C;;AA8DvBhB,QAAQ,CAACiB,YAAT,GAAwB,EAAxB;AAEAjB,QAAQ,CAACkB,SAAT,GAAqB;AACjB;AACJ;AACA;AACI3B,IAAE,EAAE4B,iDAAS,CAACC;AAJG,CAArB;AAQepB,uEAAf,E","file":"845c169-main-wps-hmr.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Ganttt from 'dhtmlx-gantt-react/src/components/Gantt/Gantt';\nimport Toolbar from 'dhtmlx-gantt-react/src/components/Toolbar';\nimport MessageArea from 'dhtmlx-gantt-react/src/components/MessageArea';\nimport 'dhtmlx-gantt-react/src/components/Gantt/Gantt.css'\nimport 'dhtmlx-gantt-react/src/App.css';\n\n/**\n * ExampleComponent is an example component.\n * It takes a property, `label`, and\n * displays it.\n * It renders an input with the property `value`\n * which is editable by the user.\n */\n\nconst data = {\n    data: [\n        { id: 1, text: 'Task #1', start_date: '2020-02-12', duration: 3, progress: 0.6 },\n        { id: 2, text: 'Task #2', start_date: '2020-02-16', duration: 3, progress: 0.4 }\n    ],\n    links: [\n        { id: 1, source: 1, target: 2, type: '0' }\n    ]\n};\n\nclass GanttApp extends Component {\n    state = {\n        currentZoom: 'Days',\n        messages: []\n    };\n\n    addMessage(message) {\n        const maxLogLength = 5;\n        const newMessate = { message };\n        const messages = [\n            newMessate,\n            ...this.state.messages\n        ];\n\n        if (messages.length > maxLogLength) {\n            messages.length = maxLogLength;\n        }\n        this.setState({ messages });\n    }\n\n    logDataUpdate = (type, action, item, id) => {\n        let text = item && item.text ? ` (${item.text})` : '';\n        let message = `${type} ${action}: ${id} ${text}`;\n        if (type === 'link' && action !== 'delete') {\n            message += ` ( source: ${item.source}, target: ${item.target} )`;\n        }\n        this.addMessage(message);\n    }\n\n    handleZoomChange = (zoom) => {\n        this.setState({\n            currentZoom: zoom\n        });\n    }\n\n    render() {\n        const { currentZoom, messages } = this.state;\n        const {id} = this.props;\n        return (\n            <div id={id}>\n                <div className=\"zoom-bar\">\n                    <Toolbar\n                        zoom={currentZoom}\n                        onZoomChange={this.handleZoomChange}\n                    />\n                </div>\n                <div className=\"gantt-container\">\n                    <Ganttt\n                        tasks={data}\n                        zoom={currentZoom}\n                        onDataUpdated={this.logDataUpdate}\n                    />\n                </div>\n                <MessageArea\n                    messages={messages}\n                />\n            </div>\n        );\n    }\n}\n\n\nGanttApp.defaultProps = {};\n\nGanttApp.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n};\n\nexport default GanttApp;"],"sourceRoot":""}